export default void(!customElements.get("snappy-typer")&&customElements.define("snappy-typer",class extends HTMLElement{constructor(){super(),this.sr=this.attachShadow({mode:"open"}),this.static=this.getAttribute("static"),this.strings=this.getAttribute("strings").split(","),this.typingSpeed=Number(this.getAttribute("typing-speed"))||120,this.wordDelay=Number(this.getAttribute("word-delay"))||5e3,this.nextDelay=Number(this.getAttribute("next-delay"))||0,this.sr.innerHTML=`\n<span part="static">${this.static||""}</span>\n<span part="typed" class="typing"></span>\n\n<style>\n:host { display: block }\n\n[part="typed"]:after {\ncontent: var(--caret, '|');\ncolor: var(--caret-color, currentcolor);\nfont-weight: 100;\n}\n\n[part="typed"]:not([data-typing="true"]):after {\nanimation: blink 1s infinite\n}\n\n@keyframes blink {\n0% { opacity: 1 } 50% { opacity: 1 }\n51% { opacity: 0 } 100% { opacity: 0 }\n}\n</style>\n`,this.typed=this.sr.querySelector("[part=typed]")}connectedCallback(){let t=0;const e=()=>{const i=this.strings[t].trim(),n=this.wordDelay+i.length*this.typingSpeed;for(let t=0;t<i.length;t++)setTimeout((()=>{this.typed.dataset.typing=!0,this.typed.innerText+=i[t],this.typed.innerText===i&&(this.typed.dataset.typing=!1)}),t*this.typingSpeed);for(let s=0;s<i.length;s++)setTimeout((()=>{this.typed.dataset.typing=!0,this.typed.innerText=this.typed.innerText.slice(0,-1),""===this.typed.innerText&&(this.typed.dataset.typing=!1,t<this.strings.length-1?t++:t=0,setTimeout(e,this.nextDelay))}),n+s*this.typingSpeed)};e(this.strings[0])}}));