export default void(!customElements.get("snappy-typer")&&customElements.define("snappy-typer",class extends HTMLElement{constructor(){super(),this.sr=this.attachShadow({mode:"open"}),this.baseString=this.getAttribute("base-string"),this.typedStrings=this.getAttribute("typed-strings").split(","),this.typingSpeed=Number(this.getAttribute("typing-speed"))||120,this.wordDelay=Number(this.getAttribute("word-delay"))||5e3,this.nextDelay=Number(this.getAttribute("next-delay"))||500,this.sr.innerHTML=`\n<span part="base">${this.baseString}</span>\n<span part="typed" class="typing"></span>\n\n<style>\n:host { display: block }\n\n[part="typed"]:after {\ncontent: '|';\nfont-weight: 100;\n}\n\n[part="typed"]:not([data-typing="true"]):after {\nanimation: blink 1s infinite\n}\n\n@keyframes blink {\n0% { opacity: 1 } 50% { opacity: 1 }\n51% { opacity: 0 } 100% { opacity: 0 }\n}\n</style>\n`,this.typed=this.sr.querySelector("[part=typed]")}connectedCallback(){let t=0;const e=()=>{const n=this.typedStrings[t].trim();for(let t=0;t<n.length;t++)setTimeout((()=>{this.typed.dataset.typing=!0,this.typed.innerText+=n[t],this.typed.innerText===n&&(this.typed.dataset.typing=!1)}),t*this.typingSpeed);for(let i=0;i<n.length;i++)setTimeout((()=>{this.typed.dataset.typing=!0,this.typed.innerText=this.typed.innerText.slice(0,-1),""===this.typed.innerText&&(this.typed.dataset.typing=!1,t<this.typedStrings.length-1?t++:t=0,setTimeout(e,this.nextDelay))}),this.wordDelay+i*this.typingSpeed)};e(this.typedStrings[0])}}));