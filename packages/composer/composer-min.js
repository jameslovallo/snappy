export default t=>{class s extends HTMLElement{constructor(){super(),Object.keys(t).forEach((s=>this[s]=t[s])),this.props&&Object.keys(this.props()).forEach((t=>{const s=this.props()[t];this[t]=s(this.getAttribute(t))})),this.DOM=this.shadow?this.attachShadow({mode:"open"}):this;const s=this.styles?`<style>${this.styles()}</style>`:"";this.DOM.innerHTML=s+this.template(),this.parts={},this.DOM.querySelectorAll("[part]").forEach((t=>{t.on=(s,e)=>{e=e.bind(this),t.addEventListener(s,(t=>e(t)))},this.parts[t.getAttribute("part")]=t}))}connectedCallback(){this.ready()}}!customElements.get(t.component)&&customElements.define(t.component,s)};